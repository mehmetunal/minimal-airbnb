@model Maggsoft.Core.Model.Pagination.PagedList<MinimalAirbnb.Application.Messages.DTOs.MessageDto>
@{
    ViewData["Title"] = "Mesajlarım";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="bi bi-send-fill text-primary"></i>
                    Gönderdiğim Mesajlar
                </h2>
                <a href="@Url.Action("Create", "Messages")" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i>
                    Yeni Mesaj
                </a>
            </div>

            @if (Model.Data.Any())
            {
                <!-- İstatistikler -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-primary mb-1">@Model.Data.Count()</h4>
                                <small class="text-muted">Toplam Mesaj</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-success mb-1">@Model.Data.Count(m => m.IsRead)</h4>
                                <small class="text-muted">Okunmuş</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-warning mb-1">@Model.Data.Count(m => !m.IsRead)</h4>
                                <small class="text-muted">Okunmamış</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-info mb-1">@Model.Data.Select(m => m.ReceiverName).Distinct().Count()</h4>
                                <small class="text-muted">Farklı Alıcı</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Mesaj Listesi -->
                <div class="row">
                    @foreach (var message in Model.Data)
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100 shadow-sm @(!message.IsRead ? "border-primary" : "")">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <div>
                                            <h6 class="card-title mb-1 @(!message.IsRead ? "fw-bold" : "")">@message.Subject</h6>
                                            <small class="text-muted">
                                                <i class="bi bi-person"></i>
                                                → @message.ReceiverName
                                            </small>
                                        </div>
                                        <div class="text-end">
                                            @if (!message.IsRead)
                                            {
                                                <span class="badge bg-warning">Okunmamış</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">Okunmuş</span>
                                            }
                                            <small class="text-muted d-block">@message.CreatedAt.ToString("dd.MM.yyyy")</small>
                                        </div>
                                    </div>
                                    
                                    <p class="card-text">@(message.Content?.Length > 100 ? message.Content.Substring(0, 100) + "..." : message.Content)</p>
                                    
                                    @if (!string.IsNullOrEmpty(message.PropertyTitle))
                                    {
                                        <div class="mb-3">
                                            <small class="text-muted">
                                                <i class="bi bi-house"></i>
                                                @message.PropertyTitle
                                            </small>
                                        </div>
                                    }
                                    
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <span class="badge bg-info me-2">@message.MessageType</span>
                                            <span class="badge @(message.Priority.ToString() == "High" ? "bg-danger" : message.Priority.ToString() == "Medium" ? "bg-warning" : "bg-secondary") me-2">
                                                @message.Priority
                                            </span>
                                        </div>
                                        <div class="btn-group btn-group-sm">
                                            <a href="@Url.Action("Details", "Messages", new { id = message.Id })" 
                                               class="btn btn-outline-primary">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", "Messages", new { id = message.Id })" 
                                               class="btn btn-outline-warning">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Sayfalama -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Mesaj sayfaları">
                        <ul class="pagination justify-content-center">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("MyMessages", "Messages", new { userId = Context.Request.Query["userId"], pageNumber = Model.PageIndex, pageSize = Model.PageSize })">
                                        <i class="bi bi-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageIndex + 1 - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 1 + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageIndex + 1 ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("MyMessages", "Messages", new { userId = Context.Request.Query["userId"], pageNumber = i, pageSize = Model.PageSize })">@i</a>
                                </li>
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("MyMessages", "Messages", new { userId = Context.Request.Query["userId"], pageNumber = Model.PageIndex + 2, pageSize = Model.PageSize })">
                                        <i class="bi bi-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }

                <!-- Toplam Bilgi -->
                <div class="text-center mt-3">
                    <small class="text-muted">
                        Toplam @Model.TotalCount mesaj, @Model.TotalPages sayfa
                    </small>
                </div>
            }
            else
            {
                <!-- Boş Durum -->
                <div class="text-center py-5">
                    <i class="bi bi-send display-1 text-muted"></i>
                    <h4 class="mt-3 text-muted">Henüz mesaj göndermemişsiniz</h4>
                    <p class="text-muted">İlk mesajınızı gönderin!</p>
                    <a href="@Url.Action("Create", "Messages")" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i>
                        Mesaj Gönder
                    </a>
                </div>
            }
        </div>
    </div>
</div> 