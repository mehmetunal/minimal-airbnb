@model MinimalAirbnb.Web.Models.PagedListWrapper<MinimalAirbnb.Application.Favorites.DTOs.FavoriteDto>
@{
    ViewData["Title"] = "Favorilerim";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="bi bi-heart-fill text-danger"></i>
                    Favorilerim
                </h2>
                <a href="@Url.Action("Index", "Properties")" class="btn btn-primary">
                    <i class="bi bi-search"></i>
                    Ev Ara
                </a>
            </div>

            @if (Model.Data.Any())
            {
                <!-- İstatistikler -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-primary mb-1">@Model.Data.Count()</h4>
                                <small class="text-muted">Toplam Favori</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-success mb-1">₺@Model.Data.Average(f => f.PricePerNight).ToString("F0")</h4>
                                <small class="text-muted">Ortalama Fiyat</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-warning mb-1">@Model.Data.Average(f => f.AverageRating)</h4>
                                <small class="text-muted">Ortalama Puan</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h4 class="text-info mb-1">@Model.Data.Select(f => f.City).Distinct().Count()</h4>
                                <small class="text-muted">Farklı Şehir</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Favori Listesi -->
                <div class="row">
                    @foreach (var favorite in Model.Data)
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100 shadow-sm">
                                @if (!string.IsNullOrEmpty(favorite.MainPhotoUrl))
                                {
                                    <img src="@favorite.MainPhotoUrl" class="card-img-top" alt="@favorite.PropertyTitle" style="height: 200px; object-fit: cover;">
                                }
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <div>
                                            <h6 class="card-title mb-1">@favorite.PropertyTitle</h6>
                                            <small class="text-muted">@favorite.HostName</small>
                                        </div>
                                        <div class="text-end">
                                            <div class="d-flex align-items-center">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= favorite.AverageRating)
                                                    {
                                                        <i class="bi bi-star-fill text-warning me-1"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-star text-muted me-1"></i>
                                                    }
                                                }
                                            </div>
                                            <small class="text-muted">@favorite.AverageRating?.ToString("F1")/5</small>
                                        </div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="text-primary fw-bold">₺@favorite.PricePerNight</span>
                                            <small class="text-muted">gecelik</small>
                                        </div>
                                        <small class="text-muted">
                                            <i class="bi bi-geo-alt"></i>
                                            @favorite.City
                                        </small>
                                    </div>
                                    
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">
                                            <i class="bi bi-calendar3"></i>
                                            @favorite.CreatedAt.ToString("dd.MM.yyyy")
                                        </small>
                                        <div class="btn-group btn-group-sm">
                                            <a href="@Url.Action("Details", "Properties", new { id = favorite.PropertyId })" 
                                               class="btn btn-outline-primary">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Create", "Reservations", new { propertyId = favorite.PropertyId })" 
                                               class="btn btn-outline-success">
                                                <i class="bi bi-calendar-check"></i>
                                            </a>
                                            <button type="button" class="btn btn-outline-danger remove-favorite" 
                                                    data-favorite-id="@favorite.Id" data-property-title="@favorite.PropertyTitle">
                                                <i class="bi bi-heart-break"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Sayfalama -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Favori sayfaları">
                        <ul class="pagination justify-content-center">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("MyFavorites", "Favorites", new { userId = Context.Request.Query["userId"], pageNumber = Model.PageNumber, pageSize = Model.PageSize })">
                                        <i class="bi bi-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.PageNumber + 1 - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 1 + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageNumber + 1 ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("MyFavorites", "Favorites", new { userId = Context.Request.Query["userId"], pageNumber = i, pageSize = Model.PageSize })">@i</a>
                                </li>
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("MyFavorites", "Favorites", new { userId = Context.Request.Query["userId"], pageNumber = Model.PageNumber + 2, pageSize = Model.PageSize })">
                                        <i class="bi bi-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }

                <!-- Toplam Bilgi -->
                <div class="text-center mt-3">
                    <small class="text-muted">
                        Toplam @Model.TotalCount favori, @Model.TotalPages sayfa
                    </small>
                </div>
            }
            else
            {
                <!-- Boş Durum -->
                <div class="text-center py-5">
                    <i class="bi bi-heart display-1 text-muted"></i>
                    <h4 class="mt-3 text-muted">Henüz favori eviniz bulunmuyor</h4>
                    <p class="text-muted">Beğendiğiniz evleri favorilere ekleyin!</p>
                    <a href="@Url.Action("Index", "Properties")" class="btn btn-primary">
                        <i class="bi bi-search"></i>
                        Ev Ara
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Favori kaldırma işlemi
        document.addEventListener('DOMContentLoaded', function() {
            const removeButtons = document.querySelectorAll('.remove-favorite');
            
            removeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const favoriteId = this.dataset.favoriteId;
                    const propertyTitle = this.dataset.propertyTitle;
                    
                    if (confirm(`"${propertyTitle}" evini favorilerden kaldırmak istediğinizden emin misiniz?`)) {
                        // AJAX ile favori kaldırma işlemi
                        fetch(`/api/favorites/${favoriteId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                // Kartı sayfadan kaldır
                                const card = this.closest('.col-md-6');
                                card.remove();
                                
                                // Başarı mesajı
                                alert('Ev favorilerden kaldırıldı!');
                                
                                // Sayfa yenile (opsiyonel)
                                // location.reload();
                            } else {
                                alert('Favori kaldırılırken bir hata oluştu!');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Favori kaldırılırken bir hata oluştu!');
                        });
                    }
                });
            });
        });
    </script>
} 