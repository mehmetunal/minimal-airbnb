@model MinimalAirbnb.Application.Properties.DTOs.PropertyDto
@{
    ViewData["Title"] = Model.Title;
}

<div class="container-fluid">
    <!-- Property Images -->
    <div class="row mb-4">
        <div class="col-12">
            @if (!string.IsNullOrEmpty(Model.MainPhotoUrl))
            {
                <div class="bg-light d-flex align-items-center justify-content-center" style="height: 500px;">
                    <img src="@Model.MainPhotoUrl" class="d-block w-100" alt="@Model.Title" style="height: 500px; object-fit: cover;">
                </div>
            }
            else
            {
                <div class="bg-light d-flex align-items-center justify-content-center" style="height: 400px;">
                    <i class="bi bi-house fs-1 text-muted"></i>
                </div>
            }
        </div>
    </div>

    <div class="row">
        <!-- Property Details -->
        <div class="col-lg-8">
            <!-- Header -->
            <div class="row mb-4">
                <div class="col-12">
                    <h1 class="h2">@Model.Title</h1>
                    <p class="text-muted">
                        <i class="bi bi-geo-alt"></i> @Model.City, @Model.Country
                    </p>
                    <div class="d-flex align-items-center justify-content-between mb-3">
                        <div class="d-flex align-items-center">
                            <div class="text-warning me-2">
                                @for (int i = 0; i < Math.Min((int)Model.AverageRating, 5); i++)
                                {
                                    <i class="bi bi-star-fill"></i>
                                }
                                @for (int i = (int)Model.AverageRating; i < 5; i++)
                                {
                                    <i class="bi bi-star"></i>
                                }
                            </div>
                            <span class="text-muted">(@Model.TotalReviews değerlendirme)</span>
                            <span class="text-muted ms-3">@Model.ViewCount görüntülenme</span>
                        </div>
                        <button type="button" class="btn btn-outline-danger btn-sm" id="favoriteBtn">
                            <i class="bi bi-heart"></i> Favorilere Ekle
                        </button>
                    </div>
                </div>
            </div>

            <!-- Property Info -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Bu ev hakkında</h5>
                            <p class="card-text">@Model.Description</p>
                            
                            <div class="row mt-4">
                                <div class="col-md-6">
                                    <h6>Özellikler</h6>
                                    <ul class="list-unstyled">
                                        <li><i class="bi bi-people text-primary"></i> @Model.MaxGuestCount misafir</li>
                                        <li><i class="bi bi-door-open text-primary"></i> @Model.BedroomCount yatak odası</li>
                                        <li><i class="bi bi-droplet text-primary"></i> @Model.BathroomCount banyo</li>
                                        <li><i class="bi bi-bed text-primary"></i> @Model.BedCount yatak</li>
                                    </ul>
                                </div>
                                <div class="col-md-6">
                                    <h6>Olanaklar</h6>
                                    <ul class="list-unstyled">
                                        @if (Model.HasWifi)
                                        {
                                            <li><i class="bi bi-wifi text-success"></i> WiFi</li>
                                        }
                                        @if (Model.HasAirConditioning)
                                        {
                                            <li><i class="bi bi-snow text-success"></i> Klima</li>
                                        }
                                        @if (Model.HasKitchen)
                                        {
                                            <li><i class="bi bi-cup-hot text-success"></i> Mutfak</li>
                                        }
                                        @if (Model.HasParking)
                                        {
                                            <li><i class="bi bi-p-circle text-success"></i> Otopark</li>
                                        }
                                        @if (Model.HasPool)
                                        {
                                            <li><i class="bi bi-water text-success"></i> Havuz</li>
                                        }
                                        @if (Model.AllowsPets)
                                        {
                                            <li><i class="bi bi-heart text-success"></i> Evcil hayvan kabul</li>
                                        }
                                        @if (Model.AllowsSmoking)
                                        {
                                            <li><i class="bi bi-smoke text-warning"></i> Sigara içilebilir</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reviews -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Değerlendirmeler (@Model.TotalReviews)</h5>
                            @if (Model.TotalReviews > 0)
                            {
                                <div class="text-center py-3">
                                    <div class="text-warning mb-2">
                                        @for (int i = 0; i < Math.Min((int)Model.AverageRating, 5); i++)
                                        {
                                            <i class="bi bi-star-fill fs-1"></i>
                                        }
                                        @for (int i = (int)Model.AverageRating; i < 5; i++)
                                        {
                                            <i class="bi bi-star fs-1"></i>
                                        }
                                    </div>
                                    <h4>@Model.AverageRating.ToString("F1") / 5</h4>
                                    <p class="text-muted">@Model.TotalReviews değerlendirme</p>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">Henüz değerlendirme yapılmamış.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Booking Card -->
        <div class="col-lg-4">
            <div class="card sticky-top" style="top: 20px;">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title mb-0">₺@Model.PricePerNight</h5>
                        <small class="text-muted">/gece</small>
                    </div>
                    
                    <form>
                        <div class="row g-3">
                            <div class="col-6">
                                <label class="form-label">Giriş</label>
                                <input type="date" class="form-control" id="checkInDate" required>
                            </div>
                            <div class="col-6">
                                <label class="form-label">Çıkış</label>
                                <input type="date" class="form-control" id="checkOutDate" required>
                            </div>
                            <div class="col-12">
                                <label class="form-label">Misafir Sayısı</label>
                                <select class="form-select" id="guestCount">
                                    @for (int i = 1; i <= Model.MaxGuestCount; i++)
                                    {
                                        <option value="@i">@i misafir</option>
                                    }
                                </select>
                            </div>
                        </div>
                        
                        <hr>
                        
                        <div class="d-flex justify-content-between mb-2">
                            <span>₺@Model.PricePerNight x <span id="nightCount">1</span> gece</span>
                            <span id="totalPrice">₺@Model.PricePerNight</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Temizlik ücreti</span>
                            <span>₺@Model.CleaningFee</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Hizmet ücreti</span>
                            <span>₺@Model.ServiceFee</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold">
                            <span>Toplam</span>
                            <span id="grandTotal">₺@(Model.PricePerNight + Model.CleaningFee + Model.ServiceFee)</span>
                        </div>
                        
                        <button type="button" class="btn btn-primary w-100 mt-3" id="createReservationBtn" data-bs-toggle="modal" data-bs-target="#paymentModal">
                            Rezervasyon Yap
                        </button>
                    </form>
                    
                    <div class="text-center mt-3">
                        <small class="text-muted">
                            <i class="bi bi-shield-check"></i> 
                            Ücretsiz iptal, 7 gün öncesine kadar
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ödeme Modal -->
<div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentModalLabel">
                    <i class="bi bi-credit-card text-primary"></i>
                    Ödeme Bilgileri
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-8">
                        <form id="paymentForm">
                            <div class="mb-3">
                                <label class="form-label">Kart Üzerindeki İsim</label>
                                <input type="text" class="form-control" id="cardHolderName" required>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Kart Numarası</label>
                                <input type="text" class="form-control" id="cardNumber" maxlength="19" placeholder="1234 5678 9012 3456" required>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Son Kullanma Tarihi</label>
                                        <input type="text" class="form-control" id="expiryDate" placeholder="MM/YY" maxlength="5" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">CVV</label>
                                        <input type="text" class="form-control" id="cvv" maxlength="4" placeholder="123" required>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Ödeme Yöntemi</label>
                                <select class="form-select" id="paymentMethod" required>
                                    <option value="">Ödeme yöntemi seçin</option>
                                    <option value="CreditCard">Kredi Kartı</option>
                                    <option value="DebitCard">Banka Kartı</option>
                                </select>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Notlar (Opsiyonel)</label>
                                <textarea class="form-control" id="notes" rows="3" placeholder="Özel istekleriniz varsa buraya yazabilirsiniz..."></textarea>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Rezervasyon Özeti</h6>
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between mb-2">
                                    <small>Giriş:</small>
                                    <small id="modalCheckIn">-</small>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <small>Çıkış:</small>
                                    <small id="modalCheckOut">-</small>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <small>Misafir:</small>
                                    <small id="modalGuestCount">-</small>
                                </div>
                                <hr>
                                <div class="d-flex justify-content-between mb-2">
                                    <small>Konaklama:</small>
                                    <small id="modalAccommodation">-</small>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <small>Temizlik:</small>
                                    <small>₺@Model.CleaningFee</small>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <small>Hizmet:</small>
                                    <small>₺@Model.ServiceFee</small>
                                </div>
                                <hr>
                                <div class="d-flex justify-content-between fw-bold">
                                    <span>Toplam:</span>
                                    <span id="modalTotal">-</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="confirmPaymentBtn">
                    <i class="bi bi-lock"></i>
                    Ödemeyi Tamamla
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Date picker logic
        const checkInDate = document.getElementById('checkInDate');
        const checkOutDate = document.getElementById('checkOutDate');
        const nightCount = document.getElementById('nightCount');
        const totalPrice = document.getElementById('totalPrice');
        const grandTotal = document.getElementById('grandTotal');
        
        const pricePerNight = @Model.PricePerNight;
        const cleaningFee = @Model.CleaningFee;
        const serviceFee = @Model.ServiceFee;
        
        function updatePricing() {
            if (checkInDate.value && checkOutDate.value) {
                const checkIn = new Date(checkInDate.value);
                const checkOut = new Date(checkOutDate.value);
                const nights = Math.ceil((checkOut - checkIn) / (1000 * 60 * 60 * 24));
                
                if (nights > 0) {
                    nightCount.textContent = nights;
                    const total = pricePerNight * nights;
                    totalPrice.textContent = `₺${total}`;
                    grandTotal.textContent = `₺${total + cleaningFee + serviceFee}`;
                }
            }
        }
        
        checkInDate.addEventListener('change', updatePricing);
        checkOutDate.addEventListener('change', updatePricing);
        
        // Set minimum dates
        const today = new Date().toISOString().split('T')[0];
        checkInDate.min = today;
        checkOutDate.min = today;

        // Kart numarası formatlaması
        document.getElementById('cardNumber').addEventListener('input', function(e) {
            let value = e.target.value.replace(/\s/g, '').replace(/[^0-9]/gi, '');
            let formattedValue = value.match(/.{1,4}/g)?.join(' ') || '';
            e.target.value = formattedValue;
        });

        // Son kullanma tarihi formatlaması
        document.getElementById('expiryDate').addEventListener('input', function(e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.length >= 2) {
                value = value.substring(0, 2) + '/' + value.substring(2, 4);
            }
            e.target.value = value;
        });

        // CVV sadece sayı
        document.getElementById('cvv').addEventListener('input', function(e) {
            e.target.value = e.target.value.replace(/\D/g, '');
        });

        // Modal açıldığında rezervasyon bilgilerini güncelle
        document.getElementById('paymentModal').addEventListener('show.bs.modal', function() {
            const checkIn = checkInDate.value;
            const checkOut = checkOutDate.value;
            const guestCount = document.getElementById('guestCount').value;
            
            if (!checkIn || !checkOut) {
                alert('Lütfen giriş ve çıkış tarihlerini seçin.');
                return false; // Modal'ı açma
            }
            
            if (new Date(checkIn) >= new Date(checkOut)) {
                alert('Çıkış tarihi giriş tarihinden sonra olmalıdır.');
                return false; // Modal'ı açma
            }
            
            // Modal içindeki bilgileri güncelle
            document.getElementById('modalCheckIn').textContent = checkIn;
            document.getElementById('modalCheckOut').textContent = checkOut;
            document.getElementById('modalGuestCount').textContent = guestCount + ' misafir';
            document.getElementById('modalAccommodation').textContent = totalPrice.textContent;
            document.getElementById('modalTotal').textContent = grandTotal.textContent;
        });

        // Ödeme tamamlama işlemi
        document.getElementById('confirmPaymentBtn').addEventListener('click', async function() {
            const checkIn = checkInDate.value;
            const checkOut = checkOutDate.value;
            const guestCount = document.getElementById('guestCount').value;
            const totalPrice = parseFloat(grandTotal.textContent.replace('₺', ''));
            
            // Ödeme formu validasyonu
            const cardHolderName = document.getElementById('cardHolderName').value;
            const cardNumber = document.getElementById('cardNumber').value;
            const expiryDate = document.getElementById('expiryDate').value;
            const cvv = document.getElementById('cvv').value;
            const paymentMethod = document.getElementById('paymentMethod').value;
            const notes = document.getElementById('notes').value;
            
            if (!cardHolderName || !cardNumber || !expiryDate || !cvv || !paymentMethod) {
                showError('Lütfen tüm ödeme bilgilerini doldurun.');
                return;
            }
            
            // Kart numarası formatı kontrolü
            if (cardNumber.replace(/\s/g, '').length !== 16) {
                showError('Geçerli bir kart numarası girin.');
                return;
            }
            
            // CVV kontrolü
            if (cvv.length < 3 || cvv.length > 4) {
                showError('Geçerli bir CVV girin.');
                return;
            }
            
            // Son kullanma tarihi kontrolü
            if (!/^\d{2}\/\d{2}$/.test(expiryDate)) {
                showError('Son kullanma tarihini MM/YY formatında girin.');
                return;
            }
            
            const reservationData = {
                checkInDate: checkIn,
                checkOutDate: checkOut,
                guestCount: parseInt(guestCount),
                totalPrice: totalPrice,
                notes: notes,
                paymentMethod: paymentMethod,
                cardNumber: cardNumber.replace(/\s/g, ''),
                expiryDate: expiryDate,
                cvv: cvv,
                cardHolderName: cardHolderName
            };
            
            // Butonu devre dışı bırak
            const confirmBtn = document.getElementById('confirmPaymentBtn');
            const originalText = confirmBtn.innerHTML;
            confirmBtn.disabled = true;
            confirmBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> İşleniyor...';
            
            try {
                const response = await fetch(`/Properties/CreateReservation/@Model.Id`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(reservationData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Modal'ı kapat
                    const modal = bootstrap.Modal.getInstance(document.getElementById('paymentModal'));
                    modal.hide();
                    
                    // Başarı mesajı göster
                    showSuccess('Rezervasyon ve ödeme başarıyla tamamlandı!');
                    
                    // Başarılı rezervasyon sonrası yönlendirme
                    setTimeout(() => {
                        window.location.href = '/Reservations/MyReservations';
                    }, 2000);
                } else {
                    showError('Hata: ' + result.message?.description);
                }
            } catch (error) {
                showError('İşlem sırasında bir hata oluştu: ' + error.message);
            } finally {
                // Butonu tekrar aktif et
                confirmBtn.disabled = false;
                confirmBtn.innerHTML = originalText;
            }
        });

        // Favori ekleme işlemi
        document.addEventListener('DOMContentLoaded', function() {
            const favoriteBtn = document.getElementById('favoriteBtn');
            if (favoriteBtn) {
                favoriteBtn.addEventListener('click', async function() {
                    try {
                        const response = await fetch(`/Properties/ToggleFavorite/@Model.Id`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        });
                        
                        const result = await response.json();
                        
                        if (result.success) {
                            const icon = favoriteBtn.querySelector('i');
                            if (icon.classList.contains('bi-heart')) {
                                icon.classList.remove('bi-heart');
                                icon.classList.add('bi-heart-fill');
                                favoriteBtn.classList.remove('btn-outline-danger');
                                favoriteBtn.classList.add('btn-danger');
                                showSuccess('Favorilere eklendi!');
                            } else {
                                icon.classList.remove('bi-heart-fill');
                                icon.classList.add('bi-heart');
                                favoriteBtn.classList.remove('btn-danger');
                                favoriteBtn.classList.add('btn-outline-danger');
                                showSuccess('Favorilerden çıkarıldı!');
                            }
                        } else {
                            showError('Hata: ' + result.message?.description);
                        }
                    } catch (error) {
                        showError('Favori işlemi sırasında hata: ' + error.message);
                    }
                });
            }
        });
    </script>
} 