@model MinimalAirbnb.Application.Reviews.Commands.UpdateReview.UpdateReviewCommand
@{
    ViewData["Title"] = "Yorum Düzenle";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="bi bi-pencil me-2"></i>Yorum Düzenle
        </h1>
        <div>
            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info">
                <i class="bi bi-eye me-1"></i>Detaylar
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left me-1"></i>Geri Dön
            </a>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="bi bi-chat-quote me-2"></i>Yorum Bilgileri
            </h6>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="Id" />
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Yorum ID</label>
                            <input type="text" class="form-control" value="@Model.Id" readonly />
                        </div>

                        <div class="mb-3">
                            <label asp-for="Rating" class="form-label">Puan *</label>
                            <div class="rating-input">
                                @for (int i = 5; i >= 1; i--)
                                {
                                    <input type="radio" asp-for="Rating" value="@i" id="rating@i" class="rating-radio" />
                                    <label for="rating@i" class="rating-star">
                                        <i class="bi bi-star"></i>
                                    </label>
                                }
                            </div>
                            <span asp-validation-for="Rating" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Comment" class="form-label">Yorum *</label>
                            <textarea asp-for="Comment" class="form-control" rows="6" placeholder="Deneyiminizi paylaşın..." id="commentText"></textarea>
                            <div class="form-text">
                                <span id="charCount">0</span>/1000 karakter
                            </div>
                            <span asp-validation-for="Comment" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <div class="form-check">
                                <input asp-for="IsApproved" class="form-check-input" />
                                <label asp-for="IsApproved" class="form-check-label">Onaylı</label>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="AdminResponse" class="form-label">Admin Yanıtı</label>
                            <textarea asp-for="AdminResponse" class="form-control" rows="4" placeholder="Misafire yanıtınız..."></textarea>
                            <span asp-validation-for="AdminResponse" class="text-danger"></span>
                        </div>

                        <div class="alert alert-info">
                            <h6><i class="bi bi-info-circle me-2"></i>Bilgi</h6>
                            <ul class="mb-0">
                                <li>Property ve Misafir bilgileri değiştirilemez</li>
                                <li>Sadece puan, yorum ve onay durumu güncellenebilir</li>
                                <li>Admin yanıtı eklenebilir veya güncellenebilir</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Yorum Önizleme -->
                <div class="card bg-light mb-3">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="bi bi-eye me-2"></i>Güncellenmiş Yorum Önizleme</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <strong>Puan:</strong>
                                    <div id="previewRating">
                                        <i class="bi bi-star text-muted"></i>
                                        <i class="bi bi-star text-muted"></i>
                                        <i class="bi bi-star text-muted"></i>
                                        <i class="bi bi-star text-muted"></i>
                                        <i class="bi bi-star text-muted"></i>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <strong>Yorum:</strong>
                                    <p id="previewComment" class="text-muted">Henüz yorum yazılmadı</p>
                                </div>
                                <div class="mb-3">
                                    <strong>Admin Yanıtı:</strong>
                                    <p id="previewResponse" class="text-muted">Yanıt yok</p>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="text-center">
                                    <div class="mb-3">
                                        <strong>Durum:</strong>
                                        <div id="previewStatus">
                                            <span class="badge bg-warning">Beklemede</span>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <strong>Güncellenme:</strong>
                                        <div id="previewDate">@DateTime.Now.ToString("dd.MM.yyyy HH:mm")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check-circle me-1"></i>Güncelle
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <style>
        .rating-input {
            display: flex;
            flex-direction: row-reverse;
            gap: 5px;
        }
        
        .rating-radio {
            display: none;
        }
        
        .rating-star {
            cursor: pointer;
            font-size: 24px;
            color: #ddd;
            transition: color 0.2s;
        }
        
        .rating-star:hover,
        .rating-star:hover ~ .rating-star,
        .rating-radio:checked ~ .rating-star {
            color: #ffc107;
        }
        
        .rating-radio:checked ~ .rating-star {
            color: #ffc107;
        }
    </style>
    
    <script>
        // Sayfa yüklendiğinde mevcut değerleri ayarla
        document.addEventListener('DOMContentLoaded', function() {
            updatePreview();
            updateCharCount();
        });

        // Event listeners
        document.getElementById('commentText').addEventListener('input', function() {
            updatePreview();
            updateCharCount();
        });

        // Rating event listeners
        document.querySelectorAll('.rating-radio').forEach(radio => {
            radio.addEventListener('change', updatePreview);
        });

        // Onay durumu değişikliği
        document.querySelector('[name="IsApproved"]').addEventListener('change', function() {
            const statusElement = document.getElementById('previewStatus');
            if (this.checked) {
                statusElement.innerHTML = '<span class="badge bg-success">Onaylı</span>';
            } else {
                statusElement.innerHTML = '<span class="badge bg-warning">Beklemede</span>';
            }
        });

        // Admin yanıt değişikliği
        document.querySelector('[name="AdminResponse"]').addEventListener('input', function() {
            const responseElement = document.getElementById('previewResponse');
            const response = this.value.trim();
            responseElement.textContent = response || 'Yanıt yok';
            responseElement.className = response ? 'text-primary' : 'text-muted';
        });

        function updatePreview() {
            // Rating önizleme
            const rating = document.querySelector('input[name="Rating"]:checked')?.value || 0;
            const ratingElement = document.getElementById('previewRating');
            ratingElement.innerHTML = '';
            for (let i = 1; i <= 5; i++) {
                const star = document.createElement('i');
                star.className = i <= rating ? 'bi bi-star-fill text-warning me-1' : 'bi bi-star text-muted me-1';
                ratingElement.appendChild(star);
            }

            // Yorum önizleme
            const comment = document.getElementById('commentText').value;
            document.getElementById('previewComment').textContent = comment || 'Henüz yorum yazılmadı';

            // Admin yanıt önizleme
            const response = document.querySelector('[name="AdminResponse"]').value.trim();
            const responseElement = document.getElementById('previewResponse');
            responseElement.textContent = response || 'Yanıt yok';
            responseElement.className = response ? 'text-primary' : 'text-muted';
        }

        function updateCharCount() {
            const comment = document.getElementById('commentText').value;
            const count = comment.length;
            document.getElementById('charCount').textContent = count;
            if (count > 1000) {
                document.getElementById('charCount').classList.add('text-danger');
            } else {
                document.getElementById('charCount').classList.remove('text-danger');
            }
        }
    </script>
} 