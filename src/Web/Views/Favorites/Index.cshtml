@model MinimalAirbnb.Web.Models.PagedListWrapper<MinimalAirbnb.Application.Favorites.DTOs.FavoriteDto>
@{
    ViewData["Title"] = "Favorilerim";
    var currentPage = Model.PageNumber + 1;
}

<div class="container py-5">
    <!-- Başlık -->
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="fw-bold">
                <i class="bi bi-heart text-danger"></i> Favorilerim
            </h1>
            <p class="text-muted">Beğendiğiniz evleri buradan takip edebilirsiniz</p>
        </div>
    </div>

    <!-- Favori Listesi -->
    <div class="row">
        @if (Model?.Data != null && Model.Data.Any())
        {
            foreach (var favorite in Model.Data)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card shadow-sm h-100">
                        @if (!string.IsNullOrEmpty(favorite.MainPhotoUrl))
                        {
                            <img src="@favorite.MainPhotoUrl" class="card-img-top" alt="@favorite.PropertyTitle" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="bi bi-house fs-1 text-muted"></i>
                            </div>
                        }
                        
                        <div class="card-body">
                            <h5 class="card-title">@favorite.PropertyTitle</h5>
                            <p class="text-muted mb-2">
                                <i class="bi bi-geo-alt"></i> @favorite.PropertyCity, @favorite.PropertyCountry
                            </p>
                            
                            <div class="d-flex align-items-center mb-2">
                                <div class="text-warning me-2">
                                    @if (favorite.PropertyAverageRating.HasValue)
                                    {
                                        var rating = (int)favorite.PropertyAverageRating.Value;
                                        @for (int i = 0; i < Math.Min(rating, 5); i++)
                                        {
                                            <i class="bi bi-star-fill"></i>
                                        }
                                        @for (int i = rating; i < 5; i++)
                                        {
                                            <i class="bi bi-star"></i>
                                        }
                                    }
                                    else
                                    {
                                        @for (int i = 0; i < 5; i++)
                                        {
                                            <i class="bi bi-star"></i>
                                        }
                                    }
                                </div>
                                <small class="text-muted">(@favorite.PropertyTotalReviews)</small>
                            </div>
                            
                            <div class="row mb-3">
                                <div class="col-6">
                                    <small class="text-muted">Yatak Odası</small><br>
                                    <strong>@favorite.PropertyBedroomCount</strong>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">Banyo</small><br>
                                    <strong>@favorite.PropertyBathroomCount</strong>
                                </div>
                            </div>
                            
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <span class="fw-bold text-primary">₺@favorite.PropertyPricePerNight</span>
                                <small class="text-muted">/gece</small>
                            </div>
                            
                            <div class="d-flex gap-2">
                                <a href="@Url.Action("Details", "Properties", new { id = favorite.PropertyId })" class="btn btn-outline-primary btn-sm flex-fill">
                                    <i class="bi bi-eye"></i> Görüntüle
                                </a>
                                <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeFavorite('@favorite.Id')">
                                    <i class="bi bi-heart-fill"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center py-5">
                <i class="bi bi-heart fs-1 text-muted mb-3"></i>
                <h3>Henüz favoriniz bulunmuyor</h3>
                <p class="text-muted">Beğendiğiniz evleri favorilere ekleyerek buradan takip edebilirsiniz.</p>
                <a href="@Url.Action("Index", "Properties")" class="btn btn-primary">
                    <i class="bi bi-search"></i> Ev Ara
                </a>
            </div>
        }
    </div>

    <!-- Sayfalama -->
    @if (Model?.TotalPages > 1)
    {
        <div class="row">
            <div class="col-12">
                <nav aria-label="Favori sayfalama">
                    <ul class="pagination justify-content-center">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { PageNumber = currentPage - 1, PageSize = Model.PageSize })">
                                    Önceki
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(Model.TotalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { PageNumber = i, PageSize = Model.PageSize })">
                                    @i
                                </a>
                            </li>
                        }

                        @if (currentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { PageNumber = currentPage + 1, PageSize = Model.PageSize })">
                                    Sonraki
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function removeFavorite(favoriteId) {
            if (confirm('Bu evi favorilerden çıkarmak istediğinizden emin misiniz?')) {
                fetch(`/api/favorites/${favoriteId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        location.reload();
                    } else {
                        alert('Hata: ' + result.message);
                    }
                })
                .catch(error => {
                    alert('Favori silinirken bir hata oluştu: ' + error.message);
                });
            }
        }
    </script>
} 